{"ast":null,"code":"import { Book } from '../../shared/Book.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../bookshopping-list.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"f\"];\n\nfunction BookEditComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function BookEditComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onDelete();\n    });\n    i0.ɵɵtext(1, \"Delete Book\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let BookEditComponent = /*#__PURE__*/(() => {\n  class BookEditComponent {\n    // Constroctor with dependency injection\n    constructor(slService) {\n      this.slService = slService;\n      this.editMode = false;\n      this.editedItemIndex = 0;\n    } // Gets call when component gets loaded\n\n\n    ngOnInit() {\n      this.subscription = this.slService.startedEditing.subscribe(index => {\n        this.editedItemIndex = index;\n        this.editMode = true;\n        this.editedItem = this.slService.getBook(index);\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount\n        });\n      });\n    } // Gets called when component gets unloaded\n\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n    onSubmit(form) {\n      const value = form.value; // Create object of Book class to add new Book\n\n      const newBook = new Book(value.name, value.amount);\n\n      if (this.editMode) {\n        // Update existing book\n        this.slService.updateBook(this.editedItemIndex, newBook);\n      } else {\n        // Add new Book\n        this.slService.addBook(newBook);\n      }\n\n      this.editMode = false;\n      form.reset();\n    } // Listener of Clear Data button\n\n\n    onClear() {\n      this.slForm.reset();\n      this.editMode = false;\n    } // Listener of Delete Book button\n\n\n    onDelete() {\n      this.slService.deleteBook(this.editedItemIndex);\n      this.onClear();\n    }\n\n  }\n\n  BookEditComponent.ɵfac = function BookEditComponent_Factory(t) {\n    return new (t || BookEditComponent)(i0.ɵɵdirectiveInject(i1.BookShoppingListService));\n  };\n\n  BookEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookEditComponent,\n    selectors: [[\"app-book-edit\"]],\n    viewQuery: function BookEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slForm = _t.first);\n      }\n    },\n    decls: 20,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"col-sm-5\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"col-sm-2\", \"form-group\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"ngModel\", \"\", \"required\", \"\", \"pattern\", \"^[1-9]+[0-9]*$\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"class\", \"btn btn-danger\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function BookEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function BookEditComponent_Template_form_ngSubmit_2_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.onSubmit(_r0);\n        });\n        i0.ɵɵelementStart(4, \"div\", 0);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Name of Book\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Amount of Book\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 0);\n        i0.ɵɵelementStart(14, \"div\", 1);\n        i0.ɵɵelementStart(15, \"button\", 10);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, BookEditComponent_button_17_Template, 2, 0, \"button\", 11);\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function BookEditComponent_Template_button_click_18_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵtext(19, \"Clear Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.editMode ? \"Update Existing\" : \"Add new Book\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i2.RequiredValidator, i2.NumberValueAccessor, i2.PatternValidator, i3.NgIf],\n    encapsulation: 2\n  });\n  return BookEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}